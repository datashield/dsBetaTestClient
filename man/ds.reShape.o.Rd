% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.reShape.o.R
\name{ds.reShape.o}
\alias{ds.reShape.o}
\title{ds.reShape.o calling reShapeDS.o}
\usage{
ds.reShape.o(data.name = NULL, varying = NULL, v.names = NULL,
  timevar.name = "time", idvar.name = "id", drop = NULL,
  direction = NULL, sep = ".", newobj = NULL, datasources = NULL)
}
\arguments{
\item{data.name, }{the name of the data frame.}

\item{varying, }{names of sets of variables in the wide format that correspond to single
variables in long format (‘time-varying’).}

\item{v.names, }{the names of variables in the long format that correspond to multiple variables
in the wide format}

\item{timevar.name, }{the name of the variable in long format that differentiates multiple records from the same
group or individual. If more than one record matches, the first will be taken}

\item{idvar.name, }{Names of one or more variables in long format that identify multiple records from
the same group/individual. These variables may also be present in wide format.}

\item{drop, }{a vector of names of variables to drop before reshaping.}

\item{direction, }{a character string, matched to either "wide" to reshape to wide 
format, or "long" to reshape to long format.}

\item{sep, }{a character vector of length 1, indicating a separating character in the variable
names in the wide format. This is used for guessing v.names and times arguments based on the
names in varying. This is also used to create variable names when reshaping to wide format.}

\item{newobj, }{the name of the new data frame. If this argument is not defined by the user,
the name of the new data frame is set to the name of the input data frame with the
suffix '_long' if \type{direction} is set to 'long' and with the suffix '_wide' if
\type{direction} is set to 'wide'.}

\item{datasources}{a list of opal object(s) obtained after login in to opal servers;
these objects hold also the data assign to R, as \code{dataframe}, from opal datasources.}
}
\value{
the object specified by the newobj argument (or default name newObject) is written to the
serverside and a validity message indicating whether the newobject has been correctly
created at each source is returned to the client. If it has not been correctly created the return object
return.info details in which source the problem exists and whether: (a) the object exists at all; (b) it has meaningful
content indicated by a valid class.
}
\description{
This function is similar to R function \code{reshape}
}
\details{
This is an assign function that uses the native R function reshape() that reshapes a
data frame between ‘wide’ format with repeated measurements in separate columns of the same
record and ‘long’ format with the repeated measurements in separate records.
}
\author{
Demetris Avraam, Paul Burton for DataSHIELD Development Team
}
