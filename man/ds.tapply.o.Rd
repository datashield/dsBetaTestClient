% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.tapply.o.R
\name{ds.tapply.o}
\alias{ds.tapply.o}
\title{ds.tapply.o calling tapplyDS.o}
\usage{
ds.tapply.o(X.name = NULL, INDEX.names = NULL, FUN.name = NULL,
  datasources = NULL)
}
\arguments{
\item{X.name, }{the name of the variable to be summarized. The user must set the name as a
character string in inverted commas}

\item{INDEX.names, }{the name of a single factor or a list of factors to index the variable 
to be summarized. The user must specify this argument in inverted commas.}

\item{FUN.name, }{the name of a valid function to be applied. The present version of this
function allows the user to choose one of the four main summarizing functions that are 'mean',
'sd', 'sum', or 'quantile'.}

\item{datasources}{specifies the particular opal object(s) to use. If the <datasources>
argument is not specified the default set of opals will be used. The default opals
are called default.opals and the default can be set using the function
{ds.setDefaultOpals.o}. If the <datasources> is to be specified, it should be set without
inverted commas: e.g. datasources=opals.em or datasources=default.opals. If you wish to
apply the function solely to e.g. the second opal server in a set of three,
the argument can be specified as: e.g. datasources=opals.em[2].
If you wish to specify the first and third opal servers in a set you specify:
e.g. datasources=opals.em[c(1,3)]}
}
\value{
an array of the summarized values created by the tapplyDS.o function. The array has
the same number of dimensions as INDEX has components.
}
\description{
Apply a Function to summarize a variable over one or more factors
}
\details{
An aggregate function that uses the native R function tapply() to apply a function to each
cell of a ragged array, that is to each (non-empty) group of values given by a unique
combination of the levels of certain factors. For example, the function can be used to
calculate the mean of BMI over males and females.
}
\author{
Paul Burton, Demetris Avraam for DataSHIELD Development Team
}
